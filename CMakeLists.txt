# CMakeLists.txt for Android build

cmake_minimum_required(VERSION 3.14)
project(xsystem4 LANGUAGES C)
set(CMAKE_C_STANDARD 11)

option(ENABLE_JSPI "Enable JSPI" OFF)

function(add_emscripten_port name)
  add_library(${name} INTERFACE)
  set_target_properties(${name} PROPERTIES
      INTERFACE_COMPILE_OPTIONS "--use-port=${name}"
      INTERFACE_LINK_OPTIONS "--use-port=${name}")
endfunction()
add_emscripten_port(zlib)
add_emscripten_port(libpng)
add_emscripten_port(freetype)
add_emscripten_port(sdl2)

add_library(GLESv3 INTERFACE)
set_target_properties(GLESv3 PROPERTIES
    INTERFACE_LINK_OPTIONS -sMIN_WEBGL_VERSION=2)

include(FetchContent)

FetchContent_Declare(
  cglm
  URL https://github.com/recp/cglm/archive/refs/tags/v0.9.2.tar.gz
  URL_HASH SHA1=cb8472aa8c2ab67b66378dbaf10c2c7368d4e4c3
)
set(CGLM_STATIC ON CACHE BOOL "Static build" FORCE)
set(CGLM_SHARED OFF CACHE BOOL "Shared build" FORCE)
FetchContent_MakeAvailable(cglm)

add_library(ffi STATIC IMPORTED)
set_target_properties(ffi PROPERTIES
  IMPORTED_LOCATION ${CMAKE_STAGING_PREFIX}/lib/libffi.a
  INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_STAGING_PREFIX}/include)

find_package(SndFile REQUIRED)

add_subdirectory(subprojects/libsys4)

add_executable(xsystem4)

target_compile_definitions(xsystem4 PRIVATE
  _DEFAULT_SOURCE
  USE_GLES
  )

target_include_directories(xsystem4 PRIVATE include)

execute_process(
  COMMAND git rev-parse --short HEAD
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE VCS_TAG
  OUTPUT_STRIP_TRAILING_WHITESPACE)
configure_file(src/version.h.in version.h)
include_directories(${CMAKE_CURRENT_BINARY_DIR})

target_sources(xsystem4 PRIVATE
  src/audio.c
  src/audio_meta.c
  src/audio_mixer.c
  src/asset_manager.c
  src/base64.c
  src/cJSON.c
  src/draw.c
  src/effect.c
  src/ffi.c
  src/font_freetype.c
  src/font_fnl.c
  src/format.c
  src/hacks.c
  src/heap.c
  src/id_pool.c
  src/input.c
  src/json.c
  src/movie_plmpeg.c
  src/msgqueue.c
  src/page.c
  src/resume.c
  src/savedata.c
  src/scene.c
  src/sprite.c
  src/swf.c
  src/system4.c
  src/text.c
  src/util.c
  src/video.c
  src/vm.c

  src/3d/debug.c
  src/3d/model.c
  src/3d/parser.c
  src/3d/particle.c
  src/3d/reign.c
  src/3d/renderer.c

  src/dungeon/dgn.c
  src/dungeon/dtx.c
  src/dungeon/dungeon.c
  src/dungeon/map.c
  src/dungeon/polyobj.c
  src/dungeon/renderer.c
  src/dungeon/skybox.c
  src/dungeon/tes.c

  src/parts/construction.c
  src/parts/debug.c
  src/parts/flash.c
  src/parts/input.c
  src/parts/motion.c
  src/parts/parts.c
  src/parts/render.c
  src/parts/text.c
  src/parts/save.c

  src/hll/ACXLoader.c
  src/hll/ADVSYS.c
  src/hll/AliceLogo.c
  src/hll/AliceLogo2.c
  src/hll/AliceLogo3.c
  src/hll/AliceLogo4.c
  src/hll/AliceLogo5.c
  src/hll/AnteaterADVEngine.c
  src/hll/BanMisc.c
  src/hll/Bitarray.c
  src/hll/CGManager.c
  src/hll/CharSpriteManager.c
  src/hll/ChipmunkSpriteEngine.c
  src/hll/ChrLoader.c
  src/hll/CommonSystemData.c
  src/hll/Confirm.c
  src/hll/Confirm2.c
  src/hll/Confirm3.c
  src/hll/CrayfishLogViewer.c
  src/hll/Cursor.c
  src/hll/Data.c
  src/hll/DataFile.c
  src/hll/DrawDungeon.c
  src/hll/DrawGraph.c
  src/hll/DrawMovie.c
  src/hll/DrawPluginManager.c
  src/hll/DrawSimpleText.c
  src/hll/File.c
  src/hll/File2.c
  src/hll/FileOperation.c
  src/hll/FillAngle.c
  src/hll/GoatGUIEngine.c
  src/hll/Gpx2Plus.c
  src/hll/GUIEngine.c
  src/hll/iarray.c
  src/hll/IbisInputEngine.c
  src/hll/InputDevice.c
  src/hll/InputString.c
  src/hll/KiwiSoundEngine.c
  src/hll/LoadCG.c
  src/hll/MainEXFile.c
  src/hll/MainSurface.c
  src/hll/MarmotModelEngine.c
  src/hll/Math.c
  src/hll/MapLoader.c
  src/hll/MenuMsg.c
  src/hll/MonsterInfo.c
  src/hll/MsgLogManager.c
  src/hll/MsgLogViewer.c
  src/hll/MsgSkip.c
  src/hll/OutputLog.c
  src/hll/PassRegister.c
  src/hll/PartsEngine.c
  src/hll/PlayDemo.c
  src/hll/PlayMovie.c
  src/hll/ReignEngine.c
  src/hll/SACT2.c
  src/hll/SengokuRanceFont.c
  src/hll/SoundFilePlayer.c
  src/hll/StoatSpriteEngine.c
  src/hll/StretchHelper.c
  src/hll/SystemService.c
  src/hll/SystemServiceEx.c
  src/hll/Timer.c
  src/hll/Toushin3Loader.c
  src/hll/VSFile.c
  )

target_link_libraries(xsystem4 PRIVATE
  m zlib sdl2 freetype ffi GLESv3 cglm SndFile::sndfile sys4 idbfs.js)

target_link_options(xsystem4 PRIVATE
  -sENVIRONMENT=web
  -sMODULARIZE=1
  -sEXPORT_ES6=1
  -sALLOW_MEMORY_GROWTH=1
  -sEXPORTED_RUNTIME_METHODS=FS,ENV
  -sEXPORTED_FUNCTIONS=_main,_malloc,_vm_stack_trace
  --embed-file=${CMAKE_CURRENT_LIST_DIR}/shaders@/shaders
)

if (ENABLE_JSPI)
  target_link_options(xsystem4 PRIVATE
    -sASYNCIFY=2
    -sSUPPORT_LONGJMP=wasm
  )
else()
  target_link_options(xsystem4 PRIVATE
    -sASYNCIFY=1
    -sASYNCIFY_STACK_SIZE=8192
  )
  # Without optimizations, Asyncify generates very large code.
  list(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG "-O1")
endif()

target_compile_options(xsystem4 PRIVATE -Wno-unused-parameter)

option(XSYSTEM4_INSTALL_DIR "Install directory for xsystem4" "")
if (XSYSTEM4_INSTALL_DIR)
  install(
    FILES
      ${CMAKE_CURRENT_BINARY_DIR}/xsystem4.js
      ${CMAKE_CURRENT_BINARY_DIR}/xsystem4.wasm
      ${CMAKE_CURRENT_BINARY_DIR}/xsystem4.aw.js
    DESTINATION ${XSYSTEM4_INSTALL_DIR})
endif()
